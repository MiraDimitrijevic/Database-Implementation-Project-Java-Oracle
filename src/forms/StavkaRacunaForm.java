/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forms;

import controller.ClientController;
import domain.Pice;
import domain.Racun;
import domain.StavkaRacuna;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.TableModelStavkaRacuna;

/**
 *
 * @author 38169
 */
public class StavkaRacunaForm extends javax.swing.JDialog {

    Racun racun;
    StavkaRacuna srIzmena;
    boolean cuvanje = true;

    /**
     * Creates new form StavkaRacunaForm
     */
    public StavkaRacunaForm(java.awt.Frame parent, boolean modal, Racun racun) {
        super(parent, modal);
        initComponents();
        setTitle("Forma Stavka Racuna");
        setLocationRelativeTo(null);
        this.racun = racun;
        System.out.println(racun.getBrojRacuna());
        TableModelStavkaRacuna tmsr = new TableModelStavkaRacuna(racun);
        Thread t = new Thread(tmsr);
        t.start();
        tbl.setModel(tmsr);
        txtIznosRac.setText(String.valueOf(tmsr.getIznos()));
        prepareData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtIznosRac = new javax.swing.JFormattedTextField();
        btnIzmeniRacun = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtKolicina = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbPice = new javax.swing.JComboBox();
        txtNazivPica = new javax.swing.JTextField();
        btnKreirajStavku = new javax.swing.JButton();
        btnIzmeniStavku = new javax.swing.JButton();
        btnObrisiStavku = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl);

        jLabel1.setText("Iznos racuna:");

        txtIznosRac.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        btnIzmeniRacun.setText("Izmeni racun");
        btnIzmeniRacun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniRacunActionPerformed(evt);
            }
        });

        jLabel2.setText("Kolicina stavke:");

        txtKolicina.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabel3.setText("Pice:");

        jLabel4.setText("Naziv pica:");

        cmbPice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPiceItemStateChanged(evt);
            }
        });

        btnKreirajStavku.setText("Nova stavka");
        btnKreirajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajStavkuActionPerformed(evt);
            }
        });

        btnIzmeniStavku.setText("Izmeni stavku");
        btnIzmeniStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniStavkuActionPerformed(evt);
            }
        });

        btnObrisiStavku.setText("Obrisi stavku");
        btnObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiStavkuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtKolicina, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(cmbPice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtNazivPica)))
                        .addGap(46, 46, 46)
                        .addComponent(btnKreirajStavku)
                        .addContainerGap(57, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(26, 26, 26)
                                .addComponent(txtIznosRac, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btnIzmeniRacun)))
                        .addContainerGap(36, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnIzmeniStavku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnObrisiStavku)
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIznosRac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzmeniRacun))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeniStavku)
                    .addComponent(btnObrisiStavku))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtNazivPica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnKreirajStavku)))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniRacunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniRacunActionPerformed
        if (txtIznosRac.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje iznosa mora biti popunjeno!");
            return;
        }
        double iznos = Double.valueOf(txtIznosRac.getText().replace(',', '.'));
        racun.setIznosRacuna(iznos);
        switch (racun.getPoreskaOznaka()) {
            case "A":
                racun.setIznosPoreza(0);
                break;
            case "B":
                racun.setIznosPoreza(racun.getIznosRacuna() * 0.05);
                break;
            case "C":
                racun.setIznosPoreza(racun.getIznosRacuna() * 0.1);
                break;
            case "D":
                racun.setIznosPoreza(racun.getIznosRacuna() * 0.2);
                break;
            case "E":
                racun.setIznosPoreza(racun.getIznosRacuna() * 0.3);
                break;
            case "F":
                racun.setIznosPoreza(racun.getIznosRacuna() * 0.5);
                break;
            default:
                racun.setIznosPoreza(0);
        }
        TableModelStavkaRacuna tmsr = (TableModelStavkaRacuna) tbl.getModel();
        racun.setIznosListe(tmsr.getIznos());
        try {
            ClientController.getInstance().updateRacun(racun);
            JOptionPane.showMessageDialog(this, "Racun uspesno izmenjen!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(StavkaRacunaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIzmeniRacunActionPerformed

    private void btnKreirajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajStavkuActionPerformed
        String nazivPica = txtNazivPica.getText();
        if (nazivPica.isEmpty() || txtKolicina.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje iznosa mora biti popunjeno!");
            return;
        }
        double kolicina = Double.valueOf(txtKolicina.getText().replace(',', '.'));
        Pice pice = (Pice) cmbPice.getSelectedItem();
        StavkaRacuna sr = new StavkaRacuna(racun, -1, kolicina, pice, nazivPica);
        try {
            if (cuvanje) {
                ClientController.getInstance().insertStavkaRacuna(sr);
                JOptionPane.showMessageDialog(this, "Stavka racuna uspesno dodata!");
            } else {
                //Proveri sta se desava u bazi s obzirom na metodu getID u DBB
                sr.setBrojStavkeRac(srIzmena.getBrojStavkeRac());
                ClientController.getInstance().updateStavkaRacuna(sr);
                JOptionPane.showMessageDialog(this, "Stavka racuna uspesno izmenjena!");
                srIzmena = null;
                cuvanje = true;
                btnIzmeniStavku.setEnabled(true);
                btnObrisiStavku.setEnabled(true);
                btnKreirajStavku.setText("Nova stavka");
                txtKolicina.setText("");
                cmbPice.setSelectedIndex(0);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(StavkaRacunaForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnKreirajStavkuActionPerformed

    private void btnIzmeniStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniStavkuActionPerformed
        int selectedRow = tbl.getSelectedRow();
        if (selectedRow != -1) {
            TableModelStavkaRacuna tme = (TableModelStavkaRacuna) tbl.getModel();
            StavkaRacuna sr = tme.getStavkaRacuna(selectedRow);
            srIzmena = sr;
            btnIzmeniStavku.setEnabled(false);
            btnObrisiStavku.setEnabled(false);
            btnKreirajStavku.setText("Izmeni stavku racuna");
            txtKolicina.setText(String.valueOf(srIzmena.getKolicina()));
            cmbPice.setSelectedItem(sr.getPice());
            cuvanje = false;
        }
    }//GEN-LAST:event_btnIzmeniStavkuActionPerformed

    private void btnObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiStavkuActionPerformed
        int selectedRow = tbl.getSelectedRow();
        if (selectedRow != -1) {
            TableModelStavkaRacuna tme = (TableModelStavkaRacuna) tbl.getModel();
            StavkaRacuna sr = tme.getStavkaRacuna(selectedRow);
            try {
                ClientController.getInstance().deleteStavkaRacuna(sr);
                JOptionPane.showMessageDialog(this, "Stavka racuna uspesno obrisana!");

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Logger.getLogger(StavkaRacunaForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnObrisiStavkuActionPerformed

    private void cmbPiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPiceItemStateChanged
        Pice pice = (Pice) cmbPice.getSelectedItem();
        if (pice != null)
            txtNazivPica.setText(pice.getNazivPica());
    }//GEN-LAST:event_cmbPiceItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniRacun;
    private javax.swing.JButton btnIzmeniStavku;
    private javax.swing.JButton btnKreirajStavku;
    private javax.swing.JButton btnObrisiStavku;
    private javax.swing.JComboBox cmbPice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    private javax.swing.JFormattedTextField txtIznosRac;
    private javax.swing.JFormattedTextField txtKolicina;
    private javax.swing.JTextField txtNazivPica;
    // End of variables declaration//GEN-END:variables

    private void prepareData() {
        try {
            cmbPice.removeAllItems();
            ArrayList<Pice> pica = ClientController.getInstance().getAllPice();
            for (Pice pice : pica) {
                cmbPice.addItem(pice);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
}
